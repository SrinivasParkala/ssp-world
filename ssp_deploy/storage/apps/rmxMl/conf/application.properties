server.port: 1026
server.ssl.key-store:/usr/app/security/keystore.p12
server.ssl.key-store-password: welcome2ss
server.ssl.keyStoreType: PKCS12
server.ssl.keyAlias: ssp
spring.application.name = sspmlai
 ===============================
# = DATA SOURCE DB2
# ===============================
# Set here configurations for the database connection
#spring.datasource.url=jdbc:db2://boars1.fyre.ibm.com:50000/ssptdba
#spring.datasource.username=db2inst1
#spring.datasource.password=db2inst1
#spring.datasource.driver-class-name=com.ibm.db2.jcc.DB2Driver
# Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle=true
#spring.datasource.validationQuery=SELECT 1

# ===============================
# = DATA SOURCE MY-SQL
# ===============================
spring.jpa.hibernate.ddl-auto=update
spring.datasource.url=jdbc:mysql://pyrazole1.fyre.ibm.com:30008/sspdb
spring.datasource.username=root
spring.datasource.password=Welcome2@ssp

# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=create-drop
#spring.jpa.hibernate.ddl-auto=validate
# Naming strategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
# Allows Hibernate to generate SQL optimized for a particular DBMS
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL9Dialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.DB2Dialect
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.properties.javax.persistence.schema-generation.create-source=metadata
spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=create.sql


user.oauth.publicKey=-----BEGIN PUBLIC KEY-----MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvHxzc7ij3gY/TZtNZ5bUZOK6Gb6PNpsA583NeVA12sy+5vqfXBuV02v0e1wAsJCdmyPWDoskqePep6hKehuR0RUKcfnJnDpzoj4scldtaoKI4rpNgNJKr/xB6lYLlmkG/hjxiIC1CTpQ5p2AqMuPBJnofeqkwYg7Mr4i/Eyz0kmmFkaedkxoOUCBFSNwQpsJ2W5SqwF5pvmHMB3MNCKahJt6m40TV98U24tjW1uzyczIhrJEZy6Gf802PaqqudwNnscb+ePMSa20S3u/DRjdeNzFumnl3iEH0VGypV7MTdmMj0sq2zDasuB/l18wm6/zePKBY0reVCewDY5dJU2KXQIDAQAB-----END PUBLIC KEY-----


internalService.pythonServiceUrl=http://python-service.ssp:5000/expenses
