{"version":3,"sources":["services/auth.service.js","components/login.component.js","components/predict.component.js","components/predict-result.component.js","App.js","serviceWorker.js","index.js"],"names":["username","password","tenant","console","log","formData","URLSearchParams","append","process","axios","post","headers","auth","then","response","data","localStorage","setItem","JSON","stringify","removeItem","getItem","parse","required","value","className","role","Login","props","handleLogin","bind","onChangeUsername","onChangePassword","onChangeTenant","state","loading","message","e","this","setState","target","preventDefault","form","validateAll","checkBtn","context","_errors","length","AuthService","login","history","push","window","location","reload","error","resMessage","toString","onSubmit","ref","c","type","placeholder","name","onChange","validations","id","htmlFor","disabled","href","style","display","Component","SignUp","logOut","showResults","onChangeCement","onChangeGgbs","onChangeAggregate","onChangeWater","cement","ggbs","aggregate","water","logout","to","onClick","columns","dataField","text","padding","keyField","App","loginuser","undefined","user","getCurrentUser","exact","path","component","Predict","PredictResult","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"yQA2De,M,qFAjDb,SAAMA,EAAUC,EAAUC,GAE3BC,QAAQC,IAAI,kDACZD,QAAQC,IAAI,UAAUF,GACtBC,QAAQC,IAAI,QAAQJ,GACpBG,QAAQC,IAAI,YAAYH,GAExB,IAWII,EAAW,IAAIC,gBAOhB,OANDD,EAASE,OAAO,aAAcC,YAC9BH,EAASE,OAAO,WAAYL,EAAO,IAAIF,GACvCK,EAASE,OAAO,WAAYN,GAE9BE,QAAQC,IAAI,YAAYC,GAEdI,IACJC,KAAKF,qCAAiCH,EAnBzB,CACjBM,QAAS,CACL,8BAA+B,IAClC,eAAgB,qCAEjBC,KAAM,CACFZ,SAAUQ,aACVP,SAAUO,cAaVK,MAAK,SAAAC,GAMJ,OALIA,EAASC,OACXZ,QAAQC,IAAI,eAAeU,EAASC,MACpCC,aAAaC,QAAQ,OAAQC,KAAKC,UAAUL,EAASC,KAAK,OAGrDG,KAAKC,UAAUL,EAASC,W,oBAIrC,WACEZ,QAAQC,IAAI,0BACZY,aAAaI,WAAW,U,4BAG1B,WAGE,OAFAjB,QAAQC,IAAI,QAAQY,aAAaK,QAAQ,SAC9BH,KAAKI,MAAMN,aAAaK,QAAQ,a,wCChDzCE,EAAW,SAAAC,GACf,IAAKA,EACH,OACE,yBAAKC,UAAU,qBAAqBC,KAAK,SAAzC,4BAOeC,E,kDAEpB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAEDC,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,iBAAmB,EAAKA,iBAAiBD,KAAtB,gBACxB,EAAKE,iBAAmB,EAAKA,iBAAiBF,KAAtB,gBACxB,EAAKG,eAAiB,EAAKA,eAAeH,KAApB,gBAEtB,EAAKI,MAAQ,CACXlC,SAAU,GACVC,SAAU,GACVC,OAAQ,GACRiC,SAAS,EACTC,QAAS,IAbI,E,oDAiBnB,SAAiBC,GACbC,KAAKC,SAAS,CACZvC,SAAUqC,EAAEG,OAAOhB,U,8BAIzB,SAAiBa,GACbC,KAAKC,SAAS,CACZtC,SAAUoC,EAAEG,OAAOhB,U,4BAIzB,SAAea,GACXC,KAAKC,SAAS,CACbrC,OAAQmC,EAAEG,OAAOhB,U,yBAItB,SAAYa,GAAI,IAAD,OACXA,EAAEI,iBACFH,KAAKC,SAAS,CACZH,QAAS,GACTD,SAAS,IAGXG,KAAKI,KAAKC,cAEqC,IAAzCL,KAAKM,SAASC,QAAQC,QAAQC,OAClCC,EAAYC,MAAMX,KAAKJ,MAAMlC,SAAUsC,KAAKJ,MAAMjC,SAASqC,KAAKJ,MAAMhC,QAASW,MAC7E,WACE,EAAKe,MAAMsB,QAAQC,KAAK,YACxBC,OAAOC,SAASC,YAElB,SAAAC,GACE,IAAMC,EACHD,EAAMzC,UACLyC,EAAMzC,SAASC,MACfwC,EAAMzC,SAASC,KAAKqB,SACtBmB,EAAMnB,SACNmB,EAAME,WAER,EAAKlB,SAAS,CACZJ,SAAS,EACTC,QAASoB,OAKflB,KAAKC,SAAS,CACZJ,SAAS,M,oBAMjB,WAAU,IAAD,OACL,OAEE,kBAAC,IAAD,CACCuB,SAAUpB,KAAKT,YACX8B,IAAK,SAAAC,GACH,EAAKlB,KAAOkB,IAGjB,uCACA,yBAAKnC,UAAU,QACb,4CACA,2BACEoC,KAAK,OACLpC,UAAU,eACVqC,YAAY,kBACZC,KAAK,SACLvC,MAAOc,KAAKJ,MAAMhC,OAClB8D,SAAU1B,KAAKL,eACfgC,YAAa,CAAC1C,MAGlB,yBAAKE,UAAU,QACb,gDACA,2BACEoC,KAAK,QACLpC,UAAU,eACVqC,YAAY,cACZC,KAAK,WACFvC,MAAOc,KAAKJ,MAAMlC,SAClBgE,SAAU1B,KAAKP,iBACfkC,YAAa,CAAC1C,MAGrB,yBAAKE,UAAU,QACb,2CACA,2BACEoC,KAAK,WACLpC,UAAU,eACVqC,YAAY,iBACZC,KAAK,WACFvC,MAAOc,KAAKJ,MAAMjC,SAClB+D,SAAU1B,KAAKN,iBACfiC,YAAa,CAAC1C,MAGrB,yBAAKE,UAAU,QACb,yBAAKA,UAAU,kCACb,2BACEoC,KAAK,WACLpC,UAAU,uBACVyC,GAAG,iBAEL,2BAAOzC,UAAU,uBAAuB0C,QAAQ,gBAAhD,iBAKJ,yBAAK1C,UAAU,UACb,4BAAQA,UAAU,4BACb2C,SAAU9B,KAAKJ,MAAMC,SACtBG,KAAKJ,MAAMC,SACR,0BAAMV,UAAU,qCAElB,yCAIP,uBAAGA,UAAU,8BAAb,UACS,uBAAG4C,KAAK,YAAR,cAGR/B,KAAKJ,MAAME,SACP,yBAAKX,UAAU,cACb,yBAAKA,UAAU,qBAAqBC,KAAK,SACtCY,KAAKJ,MAAME,UAKrB,kBAAC,IAAD,CACKkC,MAAO,CAAEC,QAAS,QAClBZ,IAAK,SAAAC,GACH,EAAKhB,SAAWgB,U,GA7JGY,aCZdC,E,kDAEnB,aAAe,IAAD,8BACX,gBACKC,OAAS,EAAKA,OAAO5C,KAAZ,gBACd,EAAK6C,YAAc,EAAKA,YAAY7C,KAAjB,gBAEnB,EAAK8C,eAAiB,EAAKA,eAAe9C,KAApB,gBACtB,EAAK+C,aAAe,EAAKA,aAAa/C,KAAlB,gBACpB,EAAKgD,kBAAoB,EAAKA,kBAAkBhD,KAAvB,gBACzB,EAAKiD,cAAgB,EAAKA,cAAcjD,KAAnB,gBAErB,EAAKI,MAAQ,CACX8C,OAAQ,GACRC,KAAM,GACNC,UAAW,GACXC,OAAO,EACPpE,KAAM,IAfG,E,kDAoBd,SAAesB,GACZC,KAAKC,SAAS,CACZyC,OAAQ3C,EAAEG,OAAOhB,U,0BAIvB,SAAaa,GACTC,KAAKC,SAAS,CACZ0C,KAAM5C,EAAEG,OAAOhB,U,+BAIrB,SAAkBa,GACdC,KAAKC,SAAS,CACb2C,UAAW7C,EAAEG,OAAOhB,U,2BAIvB,SAAca,GACZC,KAAKC,SAAS,CACb4C,MAAO9C,EAAEG,OAAOhB,U,oBAIpB,WACGwB,EAAYoC,W,yBAGf,WACC9C,KAAKC,SAAS,CACZxB,KAAM,CAAE,CAAC,OAAUuB,KAAKJ,MAAM8C,OAAO,KAAO1C,KAAKJ,MAAM+C,KAAK,UAAY3C,KAAKJ,MAAMgD,UAAU,MAAQ5C,KAAKJ,MAAMiD,MAAM,eAAiB,YAEzI7C,KAAKV,MAAMsB,QAAQC,KAAK,oB,oBAGzB,WAAU,IAAD,OACP,OACE,6BACC,6BACE,yBAAK1B,UAAU,kDACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,2BAA2ByC,GAAG,uBAC3C,wBAAIzC,UAAU,sBACZ,wBAAIA,UAAU,YACX,kBAAC,IAAD,CAAMA,UAAU,WAAW4D,GAAI,YAC7B,0BAAMC,QAAShD,KAAKoC,QAApB,iBAQf,6BACC,0BAAMhB,SAAUpB,KAAKqC,YAChBhB,IAAK,SAAAC,GACH,EAAKlB,KAAOkB,IAEjB,uCACA,yBAAKnC,UAAU,QACb,yCACA,2BACEoC,KAAK,OACLpC,UAAU,eACVqC,YAAY,SACZtC,MAAOc,KAAKJ,MAAM8C,OAClBhB,SAAU1B,KAAKsC,kBAGnB,yBAAKnD,UAAU,QACb,uCACA,2BAAOoC,KAAK,OACXpC,UAAU,eACVqC,YAAY,OACZtC,MAAOc,KAAKJ,MAAM+C,KACjBjB,SAAU1B,KAAKuC,gBAEnB,yBAAKpD,UAAU,QACb,4CACA,2BACEoC,KAAK,OACLpC,UAAU,eACVqC,YAAY,YACZtC,MAAOc,KAAKJ,MAAMgD,UAClBlB,SAAU1B,KAAKwC,qBAGnB,yBAAKrD,UAAU,QACb,wCACA,2BACEoC,KAAK,OACLpC,UAAU,eACVqC,YAAY,QACZtC,MAAOc,KAAKJ,MAAMiD,MAClBnB,SAAU1B,KAAKyC,iBAGnB,yBAAKtD,UAAU,UACb,4BAAQoC,KAAK,SAASpC,UAAU,mBAAhC,YAIF,uBAAGA,UAAU,8BAAb,sBACqB,uBAAG4C,KAAK,YAAR,oB,GA7HKG,a,yBCEfC,E,kDAEnB,WAAY7C,GAAQ,IAAD,8BACjB,cAAMA,IACD8C,OAAS,EAAKA,OAAO5C,KAAZ,gBAEhB,EAAKI,MAAQ,CACTnB,KAAM,CAAE,CAAC,OAAS,KAAK,KAAO,KAAK,UAAY,MAAM,MAAQ,MAAM,eAAiB,SAAS,CAAC,OAAS,KAAK,KAAO,KAAK,UAAY,OAAO,MAAQ,MAAM,eAAiB,UAC1KwE,QAAS,CACV,CACEC,UAAW,SACXC,KAAM,UAER,CACED,UAAW,OACXC,KAAM,QAER,CACED,UAAW,YACXC,KAAM,aAER,CACED,UAAW,QACXC,KAAM,SAER,CACED,UAAW,iBACXC,KAAM,oBAzBQ,E,0CA+BnB,WACGzC,EAAYoC,W,oBAGf,WACE,OACE,6BACC,6BACE,yBAAK3D,UAAU,kDACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,2BAA2ByC,GAAG,uBAC3C,wBAAIzC,UAAU,sBACZ,wBAAIA,UAAU,YACX,kBAAC,IAAD,CAAMA,UAAU,WAAW4D,GAAI,YAC7B,0BAAMC,QAAShD,KAAKoC,QAApB,YAGJ,wBAAIjD,UAAU,YACZ,kBAAC,IAAD,CAAMA,UAAU,WAAW4D,GAAI,YAA/B,cASb,6BACE,+CACA,yBAAKf,MAAO,CAAEoB,QAAS,QACxB,kBAAC,IAAD,CAAgBC,SAAS,SAAS5E,KAAMuB,KAAKJ,MAAMnB,KAAMwE,QAASjD,KAAKJ,MAAMqD,iB,GA/DjDf,aCgDrBoB,E,kDA3Cb,aAAe,IAAD,8BACX,gBACKlB,OAAS,EAAKA,OAAO5C,KAAZ,gBACb,EAAKI,MAAQ,CACZ2D,eAAWC,GAJF,E,qDAQf,WACI,IAAMC,EAAO/C,EAAYgD,iBAErBD,GACFzD,KAAKC,SAAS,CACbsD,UAAWE,M,oBAKlB,WACI/C,EAAYoC,W,oBAGhB,WAGE,OACE,kBAAC,IAAD,KACE,yBAAK3D,UAAU,OACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,cACZ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOwE,OAAK,EAACC,KAAM,CAAC,IAAK,YAAaC,UAAWxE,IACjD,kBAAC,IAAD,CAAOuE,KAAK,WAAWC,UAAWC,IAClC,kBAAC,IAAD,CAAOF,KAAK,iBAAiBC,UAAWE,a,GAnCtC7B,aCGE8B,QACW,cAA7BlD,OAAOC,SAASkD,UAEe,UAA7BnD,OAAOC,SAASkD,UAEhBnD,OAAOC,SAASkD,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBlG,MAAK,SAAAmG,GACJA,EAAaC,gBAEdC,OAAM,SAAA3D,GACLpD,QAAQoD,MAAMA,EAAMnB,a","file":"static/js/main.7a03e13e.chunk.js","sourcesContent":["import axios from \"axios\";\n\n//cd ssp_rmx_react_client/src/proxy\n//node httpsProxy.js\n\n//curl --location --request POST https://localhost:3001/oauth/token --header 'Authorization: Basic c3NwX2RvbWFpbjpwYXNzd29yZA==' --header 'Content-Type: application/x-www-form-urlencoded' -d 'grant_type=password' -d 'username=system_sshettigar75@gmail' -d 'password=password' -k\n//curl --location --request GET https://localhost:3001/sspService/rmxApis/v1.0/getOAuthDetails -H 'Authorization: Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTE4Mjk5MDgsInVzZXJfbmFtZSI6InN5c3RlbV9zc2hldHRpZ2FyNzVAZ21haWwiLCJhdXRob3JpdGllcyI6WyJzdXBlcnVzZXIiXSwianRpIjoiNTQyNTJkYWUtNmYzZi00ZmFkLWJkOTEtODE1Zjc5MGE5MjE3IiwiY2xpZW50X2lkIjoic3NwX2RvbWFpbiIsInNjb3BlIjpbInJlYWQiLCJ3cml0ZSJdfQ.IQDa2ilGlFnvvtDxUBxzMvTy-TqG1Yv9RWaybpTLoNz-UIx7KGUldBPbBDAAZNYwEr_VNBAB_7IuN0ejIXJ27qhIbjsM7P8cGqU9v80t4RG3w3wlO9-5U6UATMB5bQP1dFaJ8CmmLo1vcxjIsplYxXGfaHJ5PAfS3fk1q3tQYsym1XwhyP97UzMrcIog8TPFFY9wox9ID5DNuelhhOvr7eneoHe4Zb2hZxB44Z61w4qxRJE_X9rokGO9YwjtIUxem7wI_zbfySwDIonbOtEPFTZskt5Po5UKSr8QZp9SbmGMELrLUZKV5RPe5j3sZefPcJFiR4DyFtmbjfOSAOmQ6Q' -k \n\nclass AuthService {\n\t\n  login(username, password, tenant) {\n\t\t\n\tconsole.log(\"Config Data:\"+process.env.REACT_APP_OAUTH_URL);\n\tconsole.log(\"Tenant:\"+tenant);\n\tconsole.log(\"User:\"+username);\n\tconsole.log(\"Password:\"+password);\n\t\n\tvar  axiosConfig = {\n\t  headers: {\n\t      \"Access-Control-Allow-Origin\": \"*\",\n\t\t  \"Content-Type\": \"application/x-www-form-urlencoded\"\n\t  },\n\t  auth: {\n\t      username: process.env.REACT_APP_USER,\n\t      password: process.env.REACT_APP_OAUTH_PASSWORD\n\t  }\n\t};\n\t\n\tvar formData = new URLSearchParams();\n\t  formData.append('grant_type', process.env.REACT_APP_GRANT_TYPE);\n\t  formData.append('username', tenant+\"_\"+username);\n\t  formData.append('password', password);\n\t\n\tconsole.log(\"formData:\"+formData);\n\t\n    return axios\n      .post(process.env.REACT_APP_OAUTH_URL, formData ,axiosConfig )\n      .then(response => {\n        if (response.data) {\n          console.log(\"User Stored:\"+response.data);\n          localStorage.setItem('user', JSON.stringify(response.data+'}'));\n        }\n\n        return JSON.stringify(response.data);\n      });\n  }\n\n  logout() {\n    console.log(\"Remove user from store\");\n    localStorage.removeItem(\"user\");\n  }\n\n  getCurrentUser() { \n    console.log(\"User:\"+localStorage.getItem('user'));\n\tvar authObj = JSON.parse(localStorage.getItem('user'));\n    return authObj;\n  }\n}\n\nexport default new AuthService();","import React, { Component } from 'react'\nimport AuthService from \"../services/auth.service\";\n\nimport Form from \"react-validation/build/form\";\nimport CheckButton from \"react-validation/build/button\";\n\nconst required = value => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nexport default class Login extends Component {\n\n\tconstructor(props) {\n\t    super(props);\n\t      \n\t    this.handleLogin = this.handleLogin.bind(this);\n\t    this.onChangeUsername = this.onChangeUsername.bind(this);\n\t    this.onChangePassword = this.onChangePassword.bind(this);\n\t    this.onChangeTenant = this.onChangeTenant.bind(this);\n\t\n\t    this.state = {\n\t      username: \"\",\n\t      password: \"\",\n\t      tenant: \"\",\n\t      loading: false,\n\t      message: \"\"\n\t    };\n\t}\n\t\n\tonChangeUsername(e) {\n\t    this.setState({\n\t      username: e.target.value\n\t    });\n\t}\n\t\n\tonChangePassword(e) {\n\t    this.setState({\n\t      password: e.target.value\n\t    });\n\t}\n\t\n\tonChangeTenant(e) {\n\t    this.setState({\n\t    \ttenant: e.target.value\n\t    });\n\t}\n  \n\thandleLogin(e) {\n\t    e.preventDefault();\n\t    this.setState({\n\t      message: \"\",\n\t      loading: true\n\t    });\n\t\n\t    this.form.validateAll();\n\t\t    \n      \tif (this.checkBtn.context._errors.length === 0) {\n\t      AuthService.login(this.state.username, this.state.password,this.state.tenant ).then(\n\t        () => {\n\t          this.props.history.push(\"/predict\");\n\t          window.location.reload();\n\t        },\n\t        error => {\n\t          const resMessage =\n\t            (error.response &&\n\t              error.response.data &&\n\t              error.response.data.message) ||\n\t            error.message ||\n\t            error.toString();\n\t\n\t          this.setState({\n\t            loading: false,\n\t            message: resMessage\n\t          });\n\t        }\n\t      );\n\t    } else {\n\t      this.setState({\n\t        loading: false\n\t      });\n\t    }\n\t    \n\t}\n  \n\trender() {\n\t    return (\n\t    \t\n\t      <Form\n\t      \tonSubmit={this.handleLogin}\n            ref={c => {\n              this.form = c;\n            }}\n\t      >\n\t        <h3>Sign In</h3>\n\t        <div className=\"mb-3\">\n\t          <label>Tenant Id</label>\n\t          <input\n\t            type=\"text\"\n\t            className=\"form-control\"\n\t            placeholder=\"Enter tenant id\"\n\t            name=\"tenant\"\n\t            value={this.state.tenant}\n\t            onChange={this.onChangeTenant}\n\t            validations={[required]}\n\t          />\n\t        </div>\n\t        <div className=\"mb-3\">\n\t          <label>Email address</label>\n\t          <input\n\t            type=\"email\"\n\t            className=\"form-control\"\n\t            placeholder=\"Enter email\"\n\t            name=\"username\"\n                value={this.state.username}\n                onChange={this.onChangeUsername}\n                validations={[required]}\n\t          />\n\t        </div>\n\t        <div className=\"mb-3\">\n\t          <label>Password</label>\n\t          <input\n\t            type=\"password\"\n\t            className=\"form-control\"\n\t            placeholder=\"Enter password\"\n\t            name=\"password\"\n                value={this.state.password}\n                onChange={this.onChangePassword}\n                validations={[required]}\n\t          />\n\t        </div>\n\t        <div className=\"mb-3\">\n\t          <div className=\"custom-control custom-checkbox\">\n\t            <input\n\t              type=\"checkbox\"\n\t              className=\"custom-control-input\"\n\t              id=\"customCheck1\"\n\t            />\n\t            <label className=\"custom-control-label\" htmlFor=\"customCheck1\">\n\t              Remember me\n\t            </label>\n\t          </div>\n\t        </div>\n\t        <div className=\"d-grid\">\n\t          <button className=\"btn btn-primary btn-block\"\n                disabled={this.state.loading} >\n\t             {this.state.loading && (\n                  <span className=\"spinner-border spinner-border-sm\"></span>\n                )}\n                <span>Login</span>\n\t          </button>\n\t        </div>\n\t        \n\t        <p className=\"forgot-password text-right\">\n\t          Forgot <a href=\"/predict\">password?</a>\n\t        </p>\n\t        \n\t        {this.state.message && (\n              <div className=\"form-group\">\n                <div className=\"alert alert-danger\" role=\"alert\">\n                  {this.state.message}\n                </div>\n              </div>\n            )}\n\t        \n\t        <CheckButton\n              style={{ display: \"none\" }}\n              ref={c => {\n                this.checkBtn = c;\n              }}\n            />\n\t      </Form>\n\t     \n\t    )\n\t}\n}\n","import React, { Component } from 'react'\nimport { Link } from \"react-router-dom\";\nimport AuthService from \"../services/auth.service\";\n\nexport default class SignUp extends Component {\n\n  constructor() {\n    \tsuper();\n    \tthis.logOut = this.logOut.bind(this);\n    \tthis.showResults = this.showResults.bind(this);\n    \t\n    \tthis.onChangeCement = this.onChangeCement.bind(this);\n    \tthis.onChangeGgbs = this.onChangeGgbs.bind(this);\n    \tthis.onChangeAggregate = this.onChangeAggregate.bind(this);\n    \tthis.onChangeWater = this.onChangeWater.bind(this);\n    \t\n    \tthis.state = {\n\t      cement: \"\",\n\t      ggbs: \"\",\n\t      aggregate: \"\",\n\t      water: false,\n\t      data: []\n\t    };\n \t \n  }\n  \n  onChangeCement(e) {\n\t    this.setState({\n\t      cement: e.target.value\n\t    });\n\t}\n\t\n\tonChangeGgbs(e) {\n\t    this.setState({\n\t      ggbs: e.target.value\n\t    });\n\t}\n\t\n\tonChangeAggregate(e) {\n\t    this.setState({\n\t    \taggregate: e.target.value\n\t    });\n\t}\n  \n  \tonChangeWater(e) {\n\t    this.setState({\n\t    \twater: e.target.value\n\t    });\n\t}\n\t\n  logOut() {\n    \tAuthService.logout();\n  }\n  \n  showResults(){\n  \tthis.setState({\n  \t  data: [ {'cement': this.state.cement,'ggbs':this.state.ggbs,'aggregate':this.state.aggregate,'water':this.state.water,'predictedvalue':'56.86'} ]\n  \t});\n  \tthis.props.history.push(\"/predictresult\");\n  }\n  \t\n  render() {\n    return (\n      <div>\n\t      <div>\n\t        <nav className=\"navbar navbar-expand-lg navbar-light fixed-top\">\n\t          <div className=\"container\">\n\t            <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\n\t              <ul className=\"navbar-nav ml-auto\">\n\t\t               <li className=\"nav-item\">\n\t\t                  <Link className=\"nav-link\" to={'/sign-in'}>\n\t\t                    <span onClick={this.logOut}>Logout</span>\n\t\t                  </Link>\n\t                \t</li>\n\t              </ul>\n\t            </div>\n\t          </div>\n\t        </nav>\n\t      </div>\n\t      <div>\n\t\t      <form onSubmit={this.showResults}\n\t            ref={c => {\n\t              this.form = c;\n\t            }}>\n\t\t        <h3>Predict</h3>\n\t\t        <div className=\"mb-3\">\n\t\t          <label>Cement</label>\n\t\t          <input\n\t\t            type=\"text\"\n\t\t            className=\"form-control\"\n\t\t            placeholder=\"Cement\"\n\t\t            value={this.state.cement}\n\t            \tonChange={this.onChangeCement}\n\t\t          />\n\t\t        </div>\n\t\t        <div className=\"mb-3\">\n\t\t          <label>GGBS</label>\n\t\t          <input type=\"text\" \n\t\t          \tclassName=\"form-control\" \n\t\t          \tplaceholder=\"GGBC\" \n\t\t          \tvalue={this.state.ggbs}\n\t            \tonChange={this.onChangeGgbs} />\n\t\t        </div>\n\t\t        <div className=\"mb-3\">\n\t\t          <label>Aggregate</label>\n\t\t          <input\n\t\t            type=\"text\"\n\t\t            className=\"form-control\"\n\t\t            placeholder=\"Aggregate\"\n\t            \tvalue={this.state.aggregate}\n\t            \tonChange={this.onChangeAggregate}\n\t\t          />\n\t\t        </div>\n\t\t        <div className=\"mb-3\">\n\t\t          <label>Water</label>\n\t\t          <input\n\t\t            type=\"text\"\n\t\t            className=\"form-control\"\n\t\t            placeholder=\"Water\"\n\t\t            value={this.state.water}\n\t            \tonChange={this.onChangeWater}\n\t\t          />\n\t\t        </div>\n\t\t        <div className=\"d-grid\">\n\t\t          <button type=\"submit\" className=\"btn btn-primary\">\n\t\t            Predict\n\t\t          </button>\n\t\t        </div>\n\t\t        <p className=\"forgot-password text-right\">\n\t\t          Already registered <a href=\"/sign-in\">sign in?</a>\n\t\t        </p>\n\t\t      </form>\n\t      </div>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react'\nimport { Link } from \"react-router-dom\";\nimport AuthService from \"../services/auth.service\";\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\n\nexport default class SignUp extends Component {\n\n  constructor(props) {\n    super(props);\n    this.logOut = this.logOut.bind(this);\n \t \n \tthis.state = {\n      data: [ {'cement':'55','ggbs':'45','aggregate':'5mm','water':'7.6','predictedvalue':'56.86'},{'cement':'45','ggbs':'45','aggregate':'78mm','water':'7.6','predictedvalue':'76.86'}],\n      columns: [\n\t    {\n\t      dataField: \"cement\",\n\t      text: \"Cement\"\n\t    },\n\t    {\n\t      dataField: \"ggbs\",\n\t      text: \"Ggbs\"\n\t    },\n\t    {\n\t      dataField: \"aggregate\",\n\t      text: \"Aggregate\"\n\t    },\n\t    {\n\t      dataField: \"water\",\n\t      text: \"Water\"\n\t    },\n\t    {\n\t      dataField: \"predictedvalue\",\n\t      text: \"PredictedValue\"\n\t    }\n\t  ]\n    };\n  }\n  \n  logOut() {\n    \tAuthService.logout();\n  }\n  \t\n  render() {\n    return (\n      <div>\n\t      <div>\n\t        <nav className=\"navbar navbar-expand-lg navbar-light fixed-top\">\n\t          <div className=\"container\">\n\t            <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\n\t              <ul className=\"navbar-nav ml-auto\">\n\t\t               <li className=\"nav-item\">\n\t\t                  <Link className=\"nav-link\" to={'/sign-in'}>\n\t\t                    <span onClick={this.logOut}>Logout</span>\n\t\t                  </Link>\n\t                \t</li>\n\t                \t<li className=\"nav-item\">\n\t\t                  <Link className=\"nav-link\" to={'/predict'}>\n\t\t                    Home\n\t\t                  </Link>\n\t                \t</li>\n\t              </ul>\n\t            </div>\n\t          </div>\n\t        </nav>\n\t      </div>\n\t      <div>\n\t        <h3>Predict Results</h3>\n\t        <div style={{ padding: \"2px\" }}>\n\t\t      <BootstrapTable keyField=\"cement\" data={this.state.data} columns={this.state.columns} />\n\t\t    </div>\n\t      </div>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react'\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\nimport './App.css'\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Login from './components/login.component'\nimport Predict from './components/predict.component'\nimport PredictResult from './components/predict-result.component'\nimport AuthService from \"./services/auth.service\";\n\nclass App extends Component {\n\n \tconstructor() {\n    \tsuper();\n    \tthis.logOut = this.logOut.bind(this);\n \t   \tthis.state = {\n \t   \t\tloginuser: undefined\n \t   \t};\n  \t}\n  \n\tcomponentDidMount() {\n\t    const user = AuthService.getCurrentUser();\n\t  \n\t    if (user) {\n\t      this.setState({\n\t      \tloginuser: user\n\t      });\n\t    }\n\t}\n\t\n\tlogOut() {\n    \tAuthService.logout();\n    }\n\t  \n\trender()  {\n\t  //const { loginuser } = this.state;\n\t\n\t  return (\n\t    <Router>\n\t      <div className=\"App\">\n\t        <div className=\"auth-wrapper\">\n\t          <div className=\"auth-inner\">\n\t             <Switch>\n\t\t              <Route exact path={[\"/\", \"/sign-in\"]} component={Login} />\n\t\t              <Route path=\"/predict\" component={Predict} />\n\t\t              <Route path=\"/predictresult\" component={PredictResult} />\n\t\t         </Switch>\n\t          </div>\n\t        </div>\n\t      </div>\n\t    </Router>\n\t  )\n\t}\n\n}\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport './index.css';\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}